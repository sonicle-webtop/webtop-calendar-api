/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.calendar.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsTags extends org.jooq.impl.TableImpl<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>calendar.events_tags</code>
     */
    public static final EventsTags EVENTS_TAGS = new EventsTags();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord> getRecordType() {
        return com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord.class;
    }

    /**
     * The column <code>calendar.events_tags.event_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord, java.lang.String> EVENT_ID = createField(org.jooq.impl.DSL.name("event_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>calendar.events_tags.tag_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord, java.lang.String> TAG_ID = createField(org.jooq.impl.DSL.name("tag_id"), org.jooq.impl.SQLDataType.VARCHAR(22).nullable(false), this, "");

    private EventsTags(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventsTags(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>calendar.events_tags</code> table reference
     */
    public EventsTags(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), EVENTS_TAGS);
    }

    /**
     * Create an aliased <code>calendar.events_tags</code> table reference
     */
    public EventsTags(org.jooq.Name alias) {
        this(alias, EVENTS_TAGS);
    }

    /**
     * Create a <code>calendar.events_tags</code> table reference
     */
    public EventsTags() {
        this(org.jooq.impl.DSL.name("events_tags"), null);
    }

    public <O extends org.jooq.Record> EventsTags(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord> key) {
        super(child, key, EVENTS_TAGS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.calendar.jooq.Calendar.CALENDAR;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.calendar.jooq.Indexes.EVENTS_TAGS_AK1);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord> getPrimaryKey() {
        return com.sonicle.webtop.calendar.jooq.Keys.EVENTS_TAGS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord>>asList(com.sonicle.webtop.calendar.jooq.Keys.EVENTS_TAGS_PKEY);
    }

    @java.lang.Override
    public java.util.List<org.jooq.ForeignKey<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord, ?>> getReferences() {
        return java.util.Arrays.<org.jooq.ForeignKey<com.sonicle.webtop.calendar.jooq.tables.records.EventsTagsRecord, ?>>asList(com.sonicle.webtop.calendar.jooq.Keys.EVENTS_TAGS__EVENTS_TAGS_EVENT_ID_FKEY);
    }

    private transient com.sonicle.webtop.calendar.jooq.tables.Events _events;

    public com.sonicle.webtop.calendar.jooq.tables.Events events() {
        if (_events == null)
            _events = new com.sonicle.webtop.calendar.jooq.tables.Events(this, com.sonicle.webtop.calendar.jooq.Keys.EVENTS_TAGS__EVENTS_TAGS_EVENT_ID_FKEY);

        return _events;
    }

    @java.lang.Override
    public EventsTags as(java.lang.String alias) {
        return new EventsTags(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public EventsTags as(org.jooq.Name alias) {
        return new EventsTags(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public EventsTags rename(java.lang.String name) {
        return new EventsTags(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public EventsTags rename(org.jooq.Name name) {
        return new EventsTags(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row2<java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row2) super.fieldsRow();
    }
}
