/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.calendar.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistoryEvents extends org.jooq.impl.TableImpl<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>calendar.history_events</code>
     */
    public static final HistoryEvents HISTORY_EVENTS = new HistoryEvents();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord> getRecordType() {
        return com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord.class;
    }

    /**
     * The column <code>calendar.history_events.id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord, java.lang.Long> ID = createField(org.jooq.impl.DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('calendar.seq_history_events'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>calendar.history_events.calendar_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord, java.lang.Integer> CALENDAR_ID = createField(org.jooq.impl.DSL.name("calendar_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>calendar.history_events.event_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord, java.lang.String> EVENT_ID = createField(org.jooq.impl.DSL.name("event_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>calendar.history_events.change_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord, org.joda.time.DateTime> CHANGE_TIMESTAMP = createField(org.jooq.impl.DSL.name("change_timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false).defaultValue(org.jooq.impl.DSL.field("'1970-01-01 01:00:00+01'::timestamp with time zone", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>calendar.history_events.change_type</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord, java.lang.String> CHANGE_TYPE = createField(org.jooq.impl.DSL.name("change_type"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    private HistoryEvents(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord> aliased) {
        this(alias, aliased, null);
    }

    private HistoryEvents(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>calendar.history_events</code> table reference
     */
    public HistoryEvents(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), HISTORY_EVENTS);
    }

    /**
     * Create an aliased <code>calendar.history_events</code> table reference
     */
    public HistoryEvents(org.jooq.Name alias) {
        this(alias, HISTORY_EVENTS);
    }

    /**
     * Create a <code>calendar.history_events</code> table reference
     */
    public HistoryEvents() {
        this(org.jooq.impl.DSL.name("history_events"), null);
    }

    public <O extends org.jooq.Record> HistoryEvents(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord> key) {
        super(child, key, HISTORY_EVENTS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.calendar.jooq.Calendar.CALENDAR;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.calendar.jooq.Indexes.HISTORY_EVENTS_AK1, com.sonicle.webtop.calendar.jooq.Indexes.HISTORY_EVENTS_AK2);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord> getPrimaryKey() {
        return com.sonicle.webtop.calendar.jooq.Keys.HISTORY_EVENTS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.HistoryEventsRecord>>asList(com.sonicle.webtop.calendar.jooq.Keys.HISTORY_EVENTS_PKEY);
    }

    @java.lang.Override
    public HistoryEvents as(java.lang.String alias) {
        return new HistoryEvents(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public HistoryEvents as(org.jooq.Name alias) {
        return new HistoryEvents(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public HistoryEvents rename(java.lang.String name) {
        return new HistoryEvents(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public HistoryEvents rename(org.jooq.Name name) {
        return new HistoryEvents(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row5<java.lang.Long, java.lang.Integer, java.lang.String, org.joda.time.DateTime, java.lang.String> fieldsRow() {
        return (org.jooq.Row5) super.fieldsRow();
    }
}
