/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.calendar.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecurrencesBroken extends org.jooq.impl.TableImpl<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>calendar.recurrences_broken</code>
     */
    public static final RecurrencesBroken RECURRENCES_BROKEN = new RecurrencesBroken();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord> getRecordType() {
        return com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord.class;
    }

    /**
     * The column <code>calendar.recurrences_broken.event_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord, java.lang.String> EVENT_ID = createField(org.jooq.impl.DSL.name("event_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>calendar.recurrences_broken.recurrence_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord, java.lang.Integer> RECURRENCE_ID = createField(org.jooq.impl.DSL.name("recurrence_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>calendar.recurrences_broken.event_date</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord, org.joda.time.LocalDate> EVENT_DATE = createField(org.jooq.impl.DSL.name("event_date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "", new com.sonicle.jooq.jsr310.LocalDateJodaConverter());

    /**
     * The column <code>calendar.recurrences_broken.new_event_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord, java.lang.String> NEW_EVENT_ID = createField(org.jooq.impl.DSL.name("new_event_id"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    private RecurrencesBroken(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private RecurrencesBroken(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>calendar.recurrences_broken</code> table reference
     */
    public RecurrencesBroken(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), RECURRENCES_BROKEN);
    }

    /**
     * Create an aliased <code>calendar.recurrences_broken</code> table reference
     */
    public RecurrencesBroken(org.jooq.Name alias) {
        this(alias, RECURRENCES_BROKEN);
    }

    /**
     * Create a <code>calendar.recurrences_broken</code> table reference
     */
    public RecurrencesBroken() {
        this(org.jooq.impl.DSL.name("recurrences_broken"), null);
    }

    public <O extends org.jooq.Record> RecurrencesBroken(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord> key) {
        super(child, key, RECURRENCES_BROKEN);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.calendar.jooq.Calendar.CALENDAR;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord> getPrimaryKey() {
        return com.sonicle.webtop.calendar.jooq.Keys.RECURRENCES_BROKEN_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord>>asList(com.sonicle.webtop.calendar.jooq.Keys.RECURRENCES_BROKEN_PKEY);
    }

    @java.lang.Override
    public java.util.List<org.jooq.ForeignKey<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord, ?>> getReferences() {
        return java.util.Arrays.<org.jooq.ForeignKey<com.sonicle.webtop.calendar.jooq.tables.records.RecurrencesBrokenRecord, ?>>asList(com.sonicle.webtop.calendar.jooq.Keys.RECURRENCES_BROKEN__RECURRENCES_BROKEN_EVENT_ID_FKEY, com.sonicle.webtop.calendar.jooq.Keys.RECURRENCES_BROKEN__RECURRENCES_BROKEN_NEW_EVENT_ID_FKEY, com.sonicle.webtop.calendar.jooq.Keys.RECURRENCES_BROKEN__RECURRENCES_BROKEN_NEW_EVENT_ID_FKEY1);
    }

    private transient com.sonicle.webtop.calendar.jooq.tables.Events _recurrencesBrokenEventIdFkey;
    private transient com.sonicle.webtop.calendar.jooq.tables.Events _recurrencesBrokenNewEventIdFkey;
    private transient com.sonicle.webtop.calendar.jooq.tables.Events _recurrencesBrokenNewEventIdFkey1;

    public com.sonicle.webtop.calendar.jooq.tables.Events recurrencesBrokenEventIdFkey() {
        if (_recurrencesBrokenEventIdFkey == null)
            _recurrencesBrokenEventIdFkey = new com.sonicle.webtop.calendar.jooq.tables.Events(this, com.sonicle.webtop.calendar.jooq.Keys.RECURRENCES_BROKEN__RECURRENCES_BROKEN_EVENT_ID_FKEY);

        return _recurrencesBrokenEventIdFkey;
    }

    public com.sonicle.webtop.calendar.jooq.tables.Events recurrencesBrokenNewEventIdFkey() {
        if (_recurrencesBrokenNewEventIdFkey == null)
            _recurrencesBrokenNewEventIdFkey = new com.sonicle.webtop.calendar.jooq.tables.Events(this, com.sonicle.webtop.calendar.jooq.Keys.RECURRENCES_BROKEN__RECURRENCES_BROKEN_NEW_EVENT_ID_FKEY);

        return _recurrencesBrokenNewEventIdFkey;
    }

    public com.sonicle.webtop.calendar.jooq.tables.Events recurrencesBrokenNewEventIdFkey1() {
        if (_recurrencesBrokenNewEventIdFkey1 == null)
            _recurrencesBrokenNewEventIdFkey1 = new com.sonicle.webtop.calendar.jooq.tables.Events(this, com.sonicle.webtop.calendar.jooq.Keys.RECURRENCES_BROKEN__RECURRENCES_BROKEN_NEW_EVENT_ID_FKEY1);

        return _recurrencesBrokenNewEventIdFkey1;
    }

    @java.lang.Override
    public RecurrencesBroken as(java.lang.String alias) {
        return new RecurrencesBroken(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public RecurrencesBroken as(org.jooq.Name alias) {
        return new RecurrencesBroken(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public RecurrencesBroken rename(java.lang.String name) {
        return new RecurrencesBroken(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public RecurrencesBroken rename(org.jooq.Name name) {
        return new RecurrencesBroken(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row4<java.lang.String, java.lang.Integer, org.joda.time.LocalDate, java.lang.String> fieldsRow() {
        return (org.jooq.Row4) super.fieldsRow();
    }
}
