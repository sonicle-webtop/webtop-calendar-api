/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.calendar.jooq.tables.records;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecurrencesBrokenRecord extends org.jooq.impl.UpdatableRecordImpl<RecurrencesBrokenRecord> implements org.jooq.Record4<java.lang.Integer, java.lang.Integer, org.joda.time.LocalDate, java.lang.Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>calendar.recurrences_broken.event_id</code>.
     */
    public void setEventId(java.lang.Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>calendar.recurrences_broken.event_id</code>.
     */
    public java.lang.Integer getEventId() {
        return (java.lang.Integer) get(0);
    }

    /**
     * Setter for <code>calendar.recurrences_broken.recurrence_id</code>.
     */
    public void setRecurrenceId(java.lang.Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>calendar.recurrences_broken.recurrence_id</code>.
     */
    public java.lang.Integer getRecurrenceId() {
        return (java.lang.Integer) get(1);
    }

    /**
     * Setter for <code>calendar.recurrences_broken.event_date</code>.
     */
    public void setEventDate(org.joda.time.LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>calendar.recurrences_broken.event_date</code>.
     */
    public org.joda.time.LocalDate getEventDate() {
        return (org.joda.time.LocalDate) get(2);
    }

    /**
     * Setter for <code>calendar.recurrences_broken.new_event_id</code>.
     */
    public void setNewEventId(java.lang.Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>calendar.recurrences_broken.new_event_id</code>.
     */
    public java.lang.Integer getNewEventId() {
        return (java.lang.Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Record3<java.lang.Integer, java.lang.Integer, org.joda.time.LocalDate> key() {
        return (org.jooq.Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row4<java.lang.Integer, java.lang.Integer, org.joda.time.LocalDate, java.lang.Integer> fieldsRow() {
        return (org.jooq.Row4) super.fieldsRow();
    }

    @java.lang.Override
    public org.jooq.Row4<java.lang.Integer, java.lang.Integer, org.joda.time.LocalDate, java.lang.Integer> valuesRow() {
        return (org.jooq.Row4) super.valuesRow();
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Integer> field1() {
        return com.sonicle.webtop.calendar.jooq.tables.RecurrencesBroken.RECURRENCES_BROKEN.EVENT_ID;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Integer> field2() {
        return com.sonicle.webtop.calendar.jooq.tables.RecurrencesBroken.RECURRENCES_BROKEN.RECURRENCE_ID;
    }

    @java.lang.Override
    public org.jooq.Field<org.joda.time.LocalDate> field3() {
        return com.sonicle.webtop.calendar.jooq.tables.RecurrencesBroken.RECURRENCES_BROKEN.EVENT_DATE;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Integer> field4() {
        return com.sonicle.webtop.calendar.jooq.tables.RecurrencesBroken.RECURRENCES_BROKEN.NEW_EVENT_ID;
    }

    @java.lang.Override
    public java.lang.Integer component1() {
        return getEventId();
    }

    @java.lang.Override
    public java.lang.Integer component2() {
        return getRecurrenceId();
    }

    @java.lang.Override
    public org.joda.time.LocalDate component3() {
        return getEventDate();
    }

    @java.lang.Override
    public java.lang.Integer component4() {
        return getNewEventId();
    }

    @java.lang.Override
    public java.lang.Integer value1() {
        return getEventId();
    }

    @java.lang.Override
    public java.lang.Integer value2() {
        return getRecurrenceId();
    }

    @java.lang.Override
    public org.joda.time.LocalDate value3() {
        return getEventDate();
    }

    @java.lang.Override
    public java.lang.Integer value4() {
        return getNewEventId();
    }

    @java.lang.Override
    public RecurrencesBrokenRecord value1(java.lang.Integer value) {
        setEventId(value);
        return this;
    }

    @java.lang.Override
    public RecurrencesBrokenRecord value2(java.lang.Integer value) {
        setRecurrenceId(value);
        return this;
    }

    @java.lang.Override
    public RecurrencesBrokenRecord value3(org.joda.time.LocalDate value) {
        setEventDate(value);
        return this;
    }

    @java.lang.Override
    public RecurrencesBrokenRecord value4(java.lang.Integer value) {
        setNewEventId(value);
        return this;
    }

    @java.lang.Override
    public RecurrencesBrokenRecord values(java.lang.Integer value1, java.lang.Integer value2, org.joda.time.LocalDate value3, java.lang.Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecurrencesBrokenRecord
     */
    public RecurrencesBrokenRecord() {
        super(com.sonicle.webtop.calendar.jooq.tables.RecurrencesBroken.RECURRENCES_BROKEN);
    }

    /**
     * Create a detached, initialised RecurrencesBrokenRecord
     */
    public RecurrencesBrokenRecord(java.lang.Integer eventId, java.lang.Integer recurrenceId, org.joda.time.LocalDate eventDate, java.lang.Integer newEventId) {
        super(com.sonicle.webtop.calendar.jooq.tables.RecurrencesBroken.RECURRENCES_BROKEN);

        setEventId(eventId);
        setRecurrenceId(recurrenceId);
        setEventDate(eventDate);
        setNewEventId(newEventId);
    }
}
