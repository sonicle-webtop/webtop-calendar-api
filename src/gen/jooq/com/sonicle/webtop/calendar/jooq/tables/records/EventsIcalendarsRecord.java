/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.calendar.jooq.tables.records;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsIcalendarsRecord extends org.jooq.impl.UpdatableRecordImpl<EventsIcalendarsRecord> implements org.jooq.Record2<java.lang.Integer, java.lang.String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>calendar.events_icalendars.event_id</code>.
     */
    public void setEventId(java.lang.Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>calendar.events_icalendars.event_id</code>.
     */
    public java.lang.Integer getEventId() {
        return (java.lang.Integer) get(0);
    }

    /**
     * Setter for <code>calendar.events_icalendars.raw_data</code>.
     */
    public void setRawData(java.lang.String value) {
        set(1, value);
    }

    /**
     * Getter for <code>calendar.events_icalendars.raw_data</code>.
     */
    public java.lang.String getRawData() {
        return (java.lang.String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Record1<java.lang.Integer> key() {
        return (org.jooq.Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row2<java.lang.Integer, java.lang.String> fieldsRow() {
        return (org.jooq.Row2) super.fieldsRow();
    }

    @java.lang.Override
    public org.jooq.Row2<java.lang.Integer, java.lang.String> valuesRow() {
        return (org.jooq.Row2) super.valuesRow();
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Integer> field1() {
        return com.sonicle.webtop.calendar.jooq.tables.EventsIcalendars.EVENTS_ICALENDARS.EVENT_ID;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field2() {
        return com.sonicle.webtop.calendar.jooq.tables.EventsIcalendars.EVENTS_ICALENDARS.RAW_DATA;
    }

    @java.lang.Override
    public java.lang.Integer component1() {
        return getEventId();
    }

    @java.lang.Override
    public java.lang.String component2() {
        return getRawData();
    }

    @java.lang.Override
    public java.lang.Integer value1() {
        return getEventId();
    }

    @java.lang.Override
    public java.lang.String value2() {
        return getRawData();
    }

    @java.lang.Override
    public EventsIcalendarsRecord value1(java.lang.Integer value) {
        setEventId(value);
        return this;
    }

    @java.lang.Override
    public EventsIcalendarsRecord value2(java.lang.String value) {
        setRawData(value);
        return this;
    }

    @java.lang.Override
    public EventsIcalendarsRecord values(java.lang.Integer value1, java.lang.String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventsIcalendarsRecord
     */
    public EventsIcalendarsRecord() {
        super(com.sonicle.webtop.calendar.jooq.tables.EventsIcalendars.EVENTS_ICALENDARS);
    }

    /**
     * Create a detached, initialised EventsIcalendarsRecord
     */
    public EventsIcalendarsRecord(java.lang.Integer eventId, java.lang.String rawData) {
        super(com.sonicle.webtop.calendar.jooq.tables.EventsIcalendars.EVENTS_ICALENDARS);

        setEventId(eventId);
        setRawData(rawData);
    }
}
