/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.calendar.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsAttachmentsData extends org.jooq.impl.TableImpl<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>calendar.events_attachments_data</code>
     */
    public static final EventsAttachmentsData EVENTS_ATTACHMENTS_DATA = new EventsAttachmentsData();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord> getRecordType() {
        return com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord.class;
    }

    /**
     * The column <code>calendar.events_attachments_data.event_attachment_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord, java.lang.String> EVENT_ATTACHMENT_ID = createField(org.jooq.impl.DSL.name("event_attachment_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>calendar.events_attachments_data.bytes</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord, byte[]> BYTES = createField(org.jooq.impl.DSL.name("bytes"), org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

    private EventsAttachmentsData(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventsAttachmentsData(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>calendar.events_attachments_data</code> table reference
     */
    public EventsAttachmentsData(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), EVENTS_ATTACHMENTS_DATA);
    }

    /**
     * Create an aliased <code>calendar.events_attachments_data</code> table reference
     */
    public EventsAttachmentsData(org.jooq.Name alias) {
        this(alias, EVENTS_ATTACHMENTS_DATA);
    }

    /**
     * Create a <code>calendar.events_attachments_data</code> table reference
     */
    public EventsAttachmentsData() {
        this(org.jooq.impl.DSL.name("events_attachments_data"), null);
    }

    public <O extends org.jooq.Record> EventsAttachmentsData(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord> key) {
        super(child, key, EVENTS_ATTACHMENTS_DATA);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.calendar.jooq.Calendar.CALENDAR;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord> getPrimaryKey() {
        return com.sonicle.webtop.calendar.jooq.Keys.EVENTS_ATTACHMENTS_DATA_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord>>asList(com.sonicle.webtop.calendar.jooq.Keys.EVENTS_ATTACHMENTS_DATA_PKEY);
    }

    @java.lang.Override
    public java.util.List<org.jooq.ForeignKey<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord, ?>> getReferences() {
        return java.util.Arrays.<org.jooq.ForeignKey<com.sonicle.webtop.calendar.jooq.tables.records.EventsAttachmentsDataRecord, ?>>asList(com.sonicle.webtop.calendar.jooq.Keys.EVENTS_ATTACHMENTS_DATA__EVENTS_ATTACHMENTS_DATA_EVENT_ATTACHMENT_ID_FKEY);
    }

    private transient com.sonicle.webtop.calendar.jooq.tables.EventsAttachments _eventsAttachments;

    public com.sonicle.webtop.calendar.jooq.tables.EventsAttachments eventsAttachments() {
        if (_eventsAttachments == null)
            _eventsAttachments = new com.sonicle.webtop.calendar.jooq.tables.EventsAttachments(this, com.sonicle.webtop.calendar.jooq.Keys.EVENTS_ATTACHMENTS_DATA__EVENTS_ATTACHMENTS_DATA_EVENT_ATTACHMENT_ID_FKEY);

        return _eventsAttachments;
    }

    @java.lang.Override
    public EventsAttachmentsData as(java.lang.String alias) {
        return new EventsAttachmentsData(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public EventsAttachmentsData as(org.jooq.Name alias) {
        return new EventsAttachmentsData(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public EventsAttachmentsData rename(java.lang.String name) {
        return new EventsAttachmentsData(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public EventsAttachmentsData rename(org.jooq.Name name) {
        return new EventsAttachmentsData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row2<java.lang.String, byte[]> fieldsRow() {
        return (org.jooq.Row2) super.fieldsRow();
    }
}
